<abi-corpus version='2.4' path='data/test-read-btf/test0.o'>
  <elf-function-symbols>
    <elf-symbol name='fn0' type='func-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-function-symbols>
  <elf-variable-symbols>
    <elf-symbol name='foos' size='160' type='object-type' binding='global-binding' visibility='default-visibility' is-defined='yes'/>
  </elf-variable-symbols>
  <abi-instr address-size='64'>
    <type-decl name='char' size-in-bits='8' hash='65b2d157027b431a' id='type-id-1'/>
    <enum-decl name='ANOTHER_ENUM_TYPE' linkage-name='ANOTHER_ENUM_TYPE' size-in-bits='32' alignment-in-bits='32' hash='c56d62994e44ba04' id='type-id-2'>
      <underlying-type type-id='type-id-3'/>
      <enumerator name='E0_ANOTHER_ENUM_TYPE' value='0'/>
      <enumerator name='E1_ANOTHER_ENUM_TYPE' value='1'/>
    </enum-decl>
    <enum-decl name='ENUM_TYPE' linkage-name='ENUM_TYPE' size-in-bits='32' alignment-in-bits='32' hash='5a2a9045ac9ab7ed' id='type-id-4'>
      <underlying-type type-id='type-id-5'/>
      <enumerator name='E0_ENUM_TYPE' value='0'/>
      <enumerator name='E1_ENUM_TYPE' value='1'/>
    </enum-decl>
    <type-decl name='enum-ANOTHER_ENUM_TYPE-underlying-type-32' size-in-bits='32' alignment-in-bits='32' hash='ab5c1f9ada22c3df' id='type-id-3'/>
    <type-decl name='enum-ENUM_TYPE-underlying-type-32' size-in-bits='32' alignment-in-bits='32' hash='6cbc147c2987ee6a' id='type-id-5'/>
    <type-decl name='float' size-in-bits='32' hash='d7ec3bf03d3c5690' id='type-id-6'/>
    <array-type-def dimensions='1' type-id='type-id-6' size-in-bits='320' hash='c38b8e1bf4899e1f' id='type-id-7'>
      <subrange length='10' lower-bound='0' upper-bound='9' size-in-bits='64' is-anonymous='yes' hash='4e72a2f569b234f4' id='type-id-8'/>
    </array-type-def>
    <array-type-def dimensions='1' type-id='type-id-9' size-in-bits='1280' hash='0fd13a2c85a5e58e' id='type-id-10'>
      <subrange length='2' lower-bound='0' upper-bound='1' size-in-bits='64' is-anonymous='yes' hash='95f31efc53154467' id='type-id-11'/>
    </array-type-def>
    <type-decl name='int' size-in-bits='32' hash='09d17c08f594edc7' id='type-id-12'/>
    <class-decl name='foo_type' is-struct='yes' visibility='default' size-in-bits='640' hash='91814acdbe3dd44d' id='type-id-9'>
      <data-member access='public' layout-offset-in-bits='0'>
        <var-decl name='m0' type-id='type-id-13' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='64'>
        <var-decl name='m1' type-id='type-id-14' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='128'>
        <var-decl name='m2' type-id='type-id-15' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='192'>
        <var-decl name='m3' type-id='type-id-16' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='256'>
        <var-decl name='m4' type-id='type-id-7' visibility='default'/>
      </data-member>
      <data-member access='public' layout-offset-in-bits='576'>
        <var-decl name='m5' type-id='type-id-17' visibility='default'/>
      </data-member>
    </class-decl>
    <typedef-decl name='ANOTHER_ENUM_TYPE' type-id='type-id-2' size-in-bits='32' alignment-in-bits='32' hash='c56d62994e44ba04' id='type-id-18'/>
    <typedef-decl name='ENUM_TYPE' type-id='type-id-4' size-in-bits='32' alignment-in-bits='32' hash='5a2a9045ac9ab7ed' id='type-id-19'/>
    <typedef-decl name='foo_type' type-id='type-id-9' size-in-bits='640' id='type-id-20'/>
    <typedef-decl name='u_type' type-id='type-id-21' size-in-bits='64' id='type-id-22'/>
    <union-decl name='u_type' visibility='default' size-in-bits='64' hash='0308c584ff22f778' id='type-id-21'>
      <data-member access='public'>
        <var-decl name='m0' type-id='type-id-23' visibility='default'/>
      </data-member>
      <data-member access='public'>
        <var-decl name='m1' type-id='type-id-24' visibility='default'/>
      </data-member>
    </union-decl>
    <type-decl name='unsigned char' size-in-bits='8' hash='6ebac62b3366db68' id='type-id-25'/>
    <type-decl name='unsigned int' size-in-bits='32' hash='e66b43f97c38e87a' id='type-id-26'/>
    <pointer-type-def type-id='type-id-18' size-in-bits='64' hash='31917a81113de789' id='type-id-24'/>
    <pointer-type-def type-id='type-id-19' size-in-bits='64' hash='2d82e53a384bb075' id='type-id-23'/>
    <qualified-type-def type-id='type-id-20' const='yes' hash='35d2164bb5f06b10' id='type-id-27'/>
    <pointer-type-def type-id='type-id-27' size-in-bits='64' hash='d218efa5e37f6024' id='type-id-28'/>
    <qualified-type-def type-id='type-id-12' const='yes' hash='8cef8df4b6728924' id='type-id-29'/>
    <pointer-type-def type-id='type-id-29' size-in-bits='64' hash='15e84cc8db4ed19c' id='type-id-13'/>
    <qualified-type-def type-id='type-id-22' const='yes' hash='cdc182cf884bac65' id='type-id-30'/>
    <qualified-type-def type-id='type-id-25' const='yes' hash='645f4d0d44563fc6' id='type-id-31'/>
    <pointer-type-def type-id='type-id-26' size-in-bits='64' hash='232fa04f890c2a5a' id='type-id-15'/>
    <qualified-type-def type-id='type-id-1' volatile='yes' hash='310596f89de9b019' id='type-id-32'/>
    <pointer-type-def type-id='type-id-32' size-in-bits='64' hash='82544e803ea05f77' id='type-id-14'/>
    <qualified-type-def type-id='type-id-30' volatile='yes' hash='cbc6576ab30b26d5' id='type-id-33'/>
    <pointer-type-def type-id='type-id-33' size-in-bits='64' hash='63f93897539fa533' id='type-id-17'/>
    <qualified-type-def type-id='type-id-31' volatile='yes' hash='4323a933d6d5b8ee' id='type-id-34'/>
    <pointer-type-def type-id='type-id-34' size-in-bits='64' hash='fea7cd23d606c9a5' id='type-id-16'/>
    <var-decl name='foos' type-id='type-id-10' mangled-name='foos' visibility='default' elf-symbol-id='foos'/>
    <function-decl name='fn0' mangled-name='fn0' visibility='default' binding='global' size-in-bits='64' elf-symbol-id='fn0' hash='d150580aa751706b'>
      <parameter type-id='type-id-28' name='p'/>
      <return type-id='type-id-35'/>
    </function-decl>
    <type-decl name='void' id='type-id-35'/>
    <function-type size-in-bits='64' hash='d150580aa751706b' id='type-id-36'>
      <parameter type-id='type-id-28' name='p'/>
      <return type-id='type-id-35'/>
    </function-type>
  </abi-instr>
</abi-corpus>
